<?php	$state		= "07";	$distritc	= "01";?><!DOCTYPE html><html><head>	<title>Distritos electorales por estado</title>	<meta charset="utf-8" />	<meta name="viewport" content="width=device-width, initial-scale=1.0">	<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />	<script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>	<script src="js/estado-<?php echo $state;?>.geojson.js" type="text/javascript"></script>	<style>		#map { 			border-top: 2px solid #48265C;			border-bottom: 2px solid #48265C;		}	</style></head><body>	<div id="map" style="width: 320px; height:450px; margin: 0 auto;"></div>	<script>		var map = L.map('map').setView([22.674847351188536, -101.77734374999999], 5);		L.tileLayer('https://{s}.tiles.mapbox.com/v3/{id}/{z}/{x}/{y}.png', {			maxZoom: 18,			attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +				'<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +				'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',			id: 'examples.map-20v6611k'		}).addTo(map);		function onEachFeature(feature, layer) {			var center = getCenter(layer);						if(feature.properties.DISTRITO == "<?php echo $distritc ?>") {				layer.setStyle({					fillOpacity: 0.9, opacity: 0.5, weight: 1.2, color: "#432B4D", fillColor: "#3E2F52"				});			} else {				layer.setStyle({					fillOpacity: 0.5, opacity: 0.5, weight: 0.6, color: "#432B4D", fillColor: "#887196"				});			}		}				var geojson = L.geoJson(distritosGeoJson, {			onEachFeature: onEachFeature		}).addTo(map);				map.fitBounds(geojson);				function getCenter(layer) {			if(layer._latlng != undefined) {				var latlngs = layer._latlngs,					len = latlngs.length,					i, j, p1, p2, f, center;				for (i = 0, j = len - 1, area = 0, lat = 0, lng = 0; i < len; j = i++) {					p1 = latlngs[i];					p2 = latlngs[j];					f = p1.lat * p2.lng - p2.lat * p1.lng;					lat += (p1.lat + p2.lat) * f;					lng += (p1.lng + p2.lng) * f;					area += f / 2;				}				center = area ? new L.LatLng(lat / (6 * area), lng / (6 * area)) : latlngs[0];				center.area = area;				return center;			} else {				return false;			}		}	</script></body></html>